# Test generated by RoostGPT for test nobelPrizeData using AI Type Open AI and AI Model gpt-4

# RoostTestHash=5d70822369

config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "laureates_get.csv"
    fields:
      - offset
      - limit
      - sort
      - ID
      - name
      - gender
      - motivation
      - affiliation
      - residence
      - birthDate
      - birthDateTo
      - deathDate
      - deathDateTo
      - foundedDate
      - birthCity
      - birthCountry
      - birthContinent
      - deathCity
      - deathCountry
      - deathContinent
      - foundedCity
      - foundedCountry
      - foundedContinent
      - HeadquartersCity
      - HeadquartersCountry
      - HeadquartersContinent
      - nobelPrizeYear
      - yearTo
      - nobelPrizeCategory
      - format
      - csvLang
    skipHeader: true
scenarios:
  - name: "Successful API request"
    flow:
      - get:
          url: "/laureates"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          qs:
            offset: "{{ offset }}"
            limit: "{{ limit }}"
            sort: "{{ sort }}"
            ID: "{{ ID }}"
            name: "{{ name }}"
            gender: "{{ gender }}"
            motivation: "{{ motivation }}"
            affiliation: "{{ affiliation }}"
            residence: "{{ residence }}"
            birthDate: "{{ birthDate }}"
            birthDateTo: "{{ birthDateTo }}"
            deathDate: "{{ deathDate }}"
            deathDateTo: "{{ deathDateTo }}"
            foundedDate: "{{ foundedDate }}"
            birthCity: "{{ birthCity }}"
            birthCountry: "{{ birthCountry }}"
            birthContinent: "{{ birthContinent }}"
            deathCity: "{{ deathCity }}"
            deathCountry: "{{ deathCountry }}"
            deathContinent: "{{ deathContinent }}"
            foundedCity: "{{ foundedCity }}"
            foundedCountry: "{{ foundedCountry }}"
            foundedContinent: "{{ foundedContinent }}"
            HeadquartersCity: "{{ HeadquartersCity }}"
            HeadquartersCountry: "{{ HeadquartersCountry }}"
            HeadquartersContinent: "{{ HeadquartersContinent }}"
            nobelPrizeYear: "{{ nobelPrizeYear }}"
            yearTo: "{{ yearTo }}"
            nobelPrizeCategory: "{{ nobelPrizeCategory }}"
            format: "{{ format }}"
            csvLang: "{{ csvLang }}"
          expect:
            - statusCode: 200
            - hasProperty: "laureates"
            - hasProperty: "meta"
            - hasProperty: "links"
  - name: "API request with validation failure"
    flow:
      - get:
          url: "/invalid_url"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 404
  - name: "API request with edge case"
    flow:
      - get:
          url: "/laureates"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          qs:
            offset: 1
            limit: 1
            sort: "desc"
            ID: 1
            name: "test"
            gender: "male"
            motivation: "test"
            affiliation: "test"
            residence: "test"
            birthDate: "1900-01-01"
            birthDateTo: "2000-01-01"
            deathDate: "2000-01-01"
            deathDateTo: "2100-01-01"
            foundedDate: "1900-01-01"
            birthCity: "test"
            birthCountry: "test"
            birthContinent: "Asia"
            deathCity: "test"
            deathCountry: "test"
            deathContinent: "Asia"
            foundedCity: "test"
            foundedCountry: "test"
            foundedContinent: "Asia"
            HeadquartersCity: "test"
            HeadquartersCountry: "test"
            HeadquartersContinent: "Asia"
            nobelPrizeYear: 1901
            yearTo: 2022
            nobelPrizeCategory: "che"
            format: "json"
            csvLang: "en"
          expect:
            - statusCode: 200
            - hasProperty: "laureates"
            - hasProperty: "meta"
            - hasProperty: "links"
