# Test generated by RoostGPT for test nobelmaster-data using AI Type Open AI and AI Model gpt-4

# RoostTestHash=5d70822369

config:
  target: '{{ $processEnvironment.API_HOST }}'
  phases:
    - duration: 60
      arrivalRate: 20
  payload:
    path: laureates_get.csv
    fields:
      - offset
      - limit
      - sort
      - ID
      - name
      - gender
      - motivation
      - affiliation
      - residence
      - birthDate
      - birthDateTo
      - deathDate
      - deathDateTo
      - foundedDate
      - birthCity
      - birthCountry
      - birthContinent
      - deathCity
      - deathCountry
      - deathContinent
      - foundedCity
      - foundedCountry
      - foundedContinent
      - HeadquartersCity
      - HeadquartersCountry
      - HeadquartersContinent
      - nobelPrizeYear
      - yearTo
      - nobelPrizeCategory
      - format
      - csvLang
    skipHeader: true
  plugins:
    expect: {}
scenarios:
  - name: API request with validation failure
    flow:
      - get:
          url: /laureates
          qs:
            offset: invalid
          expect:
            - statusCode: 400
  - name: API request with edge case
    flow:
      - get:
          url: /laureates
          qs:
            offset: '12345678901234567890123456789012345678901234567890'
            limit: '12345678901234567890123456789012345678901234567890'
            sort: '12345678901234567890123456789012345678901234567890'
            ID: '12345678901234567890123456789012345678901234567890'
            name: '12345678901234567890123456789012345678901234567890'
            gender: '12345678901234567890123456789012345678901234567890'
            motivation: '12345678901234567890123456789012345678901234567890'
            affiliation: '12345678901234567890123456789012345678901234567890'
            residence: '12345678901234567890123456789012345678901234567890'
            birthDate: '12345678901234567890123456789012345678901234567890'
            birthDateTo: '12345678901234567890123456789012345678901234567890'
            deathDate: '12345678901234567890123456789012345678901234567890'
            deathDateTo: '12345678901234567890123456789012345678901234567890'
            foundedDate: '12345678901234567890123456789012345678901234567890'
            birthCity: '12345678901234567890123456789012345678901234567890'
            birthCountry: '12345678901234567890123456789012345678901234567890'
            birthContinent: '12345678901234567890123456789012345678901234567890'
            deathCity: '12345678901234567890123456789012345678901234567890'
            deathCountry: '12345678901234567890123456789012345678901234567890'
            deathContinent: '12345678901234567890123456789012345678901234567890'
            foundedCity: '12345678901234567890123456789012345678901234567890'
            foundedCountry: '12345678901234567890123456789012345678901234567890'
            foundedContinent: '12345678901234567890123456789012345678901234567890'
            HeadquartersCity: '12345678901234567890123456789012345678901234567890'
            HeadquartersCountry: '12345678901234567890123456789012345678901234567890'
            HeadquartersContinent: '12345678901234567890123456789012345678901234567890'
            nobelPrizeYear: '12345678901234567890123456789012345678901234567890'
            yearTo: '12345678901234567890123456789012345678901234567890'
            nobelPrizeCategory: '12345678901234567890123456789012345678901234567890'
            format: '12345678901234567890123456789012345678901234567890'
            csvLang: '12345678901234567890123456789012345678901234567890'
          expect:
            - statusCode: 400
