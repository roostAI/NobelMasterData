# Test generated by RoostGPT for test nobelPrizeData using AI Type Open AI and AI Model gpt-4

# RoostTestHash=4aed6d93a0

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 20
  payload:
    path: "nobelPrize_category_year_get.csv"
    fields:
      - "category"
      - "year"
    skipHeader: true
  plugins:
    expect: {}

scenarios:
  - name: "Successful API request"
    flow:
      - get:
          url: "/nobelPrize/{{ category }}/{{ year }}"
          expect:
            - statusCode: 200
            - hasProperty: "nobelPrize"
            - hasProperty: "nobelPrize.awardYear"
            - hasProperty: "nobelPrize.category"
            - hasProperty: "nobelPrize.category.en"
            - hasProperty: "nobelPrize.category.se"
            - hasProperty: "nobelPrize.category.no"
            - hasProperty: "nobelPrize.categoryFullName"
            - hasProperty: "nobelPrize.categoryFullName.en"
            - hasProperty: "nobelPrize.categoryFullName.se"
            - hasProperty: "nobelPrize.categoryFullName.no"
            - hasProperty: "nobelPrize.dateAwarded"
            - hasProperty: "nobelPrize.prizeAmount"
            - hasProperty: "nobelPrize.prizeAmountAdjusted"
            - hasProperty: "nobelPrize.topMotivation"
            - hasProperty: "nobelPrize.topMotivation.en"
            - hasProperty: "nobelPrize.topMotivation.se"
            - hasProperty: "nobelPrize.topMotivation.no"
            - hasProperty: "nobelPrize.laureates"
            - hasProperty: "nobelPrize.laureates.0"

  - name: "API request with validation failure"
    flow:
      - get:
          url: "/nobelPrize/invalidCategory/1901"
          expect:
            - statusCode: 400
            - hasProperty: "code"
            - hasProperty: "message"

  - name: "API request with edge case"
    flow:
      - get:
          url: "/nobelPrize/che/1900"
          expect:
            - statusCode: 422
            - hasProperty: "code"
            - hasProperty: "message"

  - name: "API request with non-existing data"
    flow:
      - get:
          url: "/nobelPrize/che/3000"
          expect:
            - statusCode: 404
            - hasProperty: "code"
            - hasProperty: "message"
